*neovim-scalavista.txt*                     *neovim-scalavista*

neovim-scalavista - IDE-like features for Scala in Neovim.


PREREQUISITES                               *neovim-scalavista-prerequisites*

1. Neovim with Python3 support (|:checkhealth|) and the `pynvim` package
installed (`pip3 install pynvim`);

2. Java (version >= 8): make sure the `java` executable is on your `PATH`;

3. sbt and the [sbt-scalavista](https://github.com/buntec/sbt-scalavista)
plugin are recommended for larger projects and those with external
dependencies.



INSTALL                                     *neovim-scalavista-install*

Using [vim-plug](https://github.com/junegunn/vim-plug):

>
    Plug 'buntec/neovim-scalavista', { 'do': ':UpdateRemotePlugins' }
<


USAGE                                       *neovim-scalavista-usage*


Make sure you open neovim from the root of your project (where your
`scalavista.json` resides). On activation the plugin will query GitHub for
the latest version of the scalavista language server. If a newer
version is found the user is prompeted to allow automatic downloading.
A server instance is launched automatically upon opening any Scala or
Java source file. See |neovim-scalavista-commands| for a list of supported
commands. You will probably want to map the most commonly used ones to
keyboard shorcuts, e.g.,
>
    autocmd FileType scala nnoremap
    \ <silent> <buffer> <localleader>t :ScalavistaType<CR>
    autocmd FileType scala nnoremap
    \ <silent> <buffer> <localleader>d :ScalavistaDoc<CR>
    autocmd FileType scala nnoremap
    \ <silent> <buffer> <localleader>g :ScalavistaGoto<CR>
<
Autocompletion is based on Omni completion - see |compl-omni|. It works
well with [Deoplete](https://github.com/Shougo/deoplete.nvim); simply add this
to your `init.vim`:

>
    call deoplete#custom#var('omni', 'input_patterns', {
    \ 'scala': '[^. *\t]\.\w*',
    \})
<



COMMANDS                                    *neovim-scalavista-commands*

:ScalavistaCommands             Show all available commands (follow with
                                |:messages| to see the full output).

:ScalavistaDownloadServerJars   Download the latest server jars from GitHub.

:ScalavistaType                 Show type of symbol under cursor.

:ScalavistaKind                 Show kind of symbol under cursor.

:ScalavistaFullyQualifiedName   Show fully qualified name of symbol under cursor.

:ScalavistaGoto                 Jump to definition of symbol under cursor.

:ScalavistaDoc                  Show Scaladoc for symbol under cursor.

:ScalavistaErrors               Update |quickfix| list with errors.
                                Not usually needed as this is run automatically
                                every 500ms when not in insert mode.

:ScalavistaHealth               Test connection to language server.

:ScalavistaServerJars           Show available server jars (follow with
                                |:messages| to see the full output).

:ScalavistaRestartServer        Restart the server.


OPTIONS                                     *neovim-scalavista-options*

g:scalavista_default_scala_version          The Scala version to use when
                                            no `scalavista.json` is found;
                                            defaults to '2.13'.


ABOUT                                       *neovim-scalavista-about*

GitHub:  https://github.com/buntec/neovim-scalavista
License: MIT

